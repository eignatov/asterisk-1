#!/bin/sh
#
# asterix	This shell script takes care of starting and stopping
#		Asterisk PBX
#
# chkconfig:	345 90 25
#
# description:	Asterisk is an Open Source PBX and telephony development platform that \ \
#		can both replace a conventional PBX and act as a platform for \
#		developing custom telephony applications for delivering dynamic \
#		content over a telephone similarly to how one can deliver dynamic \
#		content through a web browser using CGI and a web server.
#
# pidfile:	/var/run/asterisk.pid
# config:	/etc/asterisk/asterisk.conf


# Sanity check
[ -f /etc/asterisk/asterisk.conf ] || exit 0

# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Get service config
[ -f /etc/sysconfig/asterisk ] && . /etc/sysconfig/asterisk

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down "Asterisk"
		exit 1
	fi
else
	exit 0
fi

start() {
	# Check if the service is already running?
	if [ -f /var/lock/subsys/asterisk ]; then
		msg_already_running "Asterisk"
		return
	fi

	msg_starting "Asterisk"
	daemon /usr/sbin/asterisk $ASTERISK_OPTS
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/asterisk
}

stop() {
	# Stop daemons.
	if [ ! -f /var/lock/subsys/asterisk ]; then
		msg_not_running "Asterisk"
		return
	fi

	msg_stopping "Asterisk"
	killproc asterisk
	rm -f /var/lock/subsys/asterisk >/dev/null 2>&1
}

condrestart() {
	if [ ! -f /var/lock/subsys/asterisk ]; then
		msg_not_running "Asterisk"
		RETVAL=$1
		return
	fi

	stop
	start
}

reload() {
	if [ ! -f /var/lock/subsys/asterisk ]; then
		RETVAL=1
		msg_not_running "Asterisk"
		return
	fi

	msg_reloading "Asterisk"; busy
	/usr/sbin/asterisk -rx reload > /dev/null 2>&1
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
	   	touch /var/lock/subsys/asterisk
		ok
	else
		fail
	fi
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
	stop
	start
	;;
  try-restart)
	condrestart 0
	;;
  reload|force-reload)
  	reload
	;;
  logger-reload)
	/usr/sbin/asterisk -rx "logger reload"
	;;
  status)
	status asterisk
	exit $?
	;;
  *)
	msg_usage "$0 {start|stop|restart|try-restart|reload|force-reload|logger-reload|status}"
	exit 3
esac

exit $RETVAL
